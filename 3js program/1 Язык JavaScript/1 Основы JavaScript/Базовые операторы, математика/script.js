// Термины: «унарный», «бинарный», «операнд»

    // Прежде, чем мы двинемся дальше, давайте разберёмся с терминологией.

    // Операнд – то, к чему применяется оператор. Например, в умножении 5 * 2 есть два операнда: левый операнд равен 5, а правый операнд равен 2. Иногда их называют «аргументами» вместо «операндов».

    // Унарным называется оператор, который применяется к одному операнду. Например, оператор унарный минус "-" меняет знак числа на противоположный:

    let x =1;
    x= -x;
    console.log(x);// -1 , применили унарный минус

    // Бинарным называется оператор, который применяется к двум операндам. Тот же минус существует и в бинарной форме:
    
    let y= 3;
    x=1
    console.log(3-1);// 2, бинарный минус вычитает значения


// Математика
    // Поддерживаются следующие математические операторы:

    // Сложение +,
    // Вычитание -,
    // Умножение *,
    // Деление /,
    // Взятие остатка от деления %,
    // Возведение в степень **.

        console.log(5%2);//1 <остаток от деления 5 на 2
        console.log(8%3);//2, остаток от деления 8 на 3
        
        console.log(2**3);//8
        console.log(2**10);//1024

        console.log(64**(1/2))//8 квадратный корень
        

// Сложение строк при помощи бинарного +
    console.log('4'+23)//423 конкантенация
    console.log(2 + 2 + '1')//41 


// Приведение к числу, унарный +
    // Преобразует не числа в числа
    console.log( +true ); // 1
    console.log( +"" );   // 0


// Приоритет операторов
    // Приоритет	Название	Обозначение

    // 17	унарный плюс	+
    // 17	унарный минус	-
    // 16	возведение в степень	**
    // 15	умножение	*
    // 15	деление	/
    // 13	сложение	+
    // 13	вычитание	-

    // 3	присваивание	=


// Присваивание = возвращает значение
    let a=1,
        b=2;
    let c = 3 - (a = b+1);
    console.log(a);//3
    console.log(c);//0


// Присваивание по цепочке
    let chA,chB,chC;
    chA=chB=chC=2+2//
    console.log(chA)// 4 работает с права на лево
    console.log(chB)// 4 работает с права на лево
    console.log(chC)// 4 работает с права на лево


// Сокращённая арифметика с присваиванием

    let short =2;
    console.log(short)//2
    short*=short
    console.log(short)//4
    short/=short
    console.log(short)//1
    short+=short
    console.log(short)//2
    short-=short
    console.log(short)//0
    short=2;


// Инкремент/декремент
    let counter = 2;
    counter++;        // работает как counter = counter + 1, просто запись короче
    console.log( counter ); // 3
    counter--;        // работает как counter = counter - 1, просто запись короче
    console.log( counter ); // 2

    // Когда оператор идёт после переменной — это «постфиксная форма»: counter++.
    // «Префиксная форма» — это когда оператор идёт перед переменной: ++counter.
    let postFix=counter++;//counter=3 but postfix=2
    console.log(postFix)
    let PreFix=++counter;
    console.log(PreFix)//counter=5 but postfix=4

    counter = 1;
    console.log( 2 * ++counter ); // 4


// Побитовые операторы
    // AND(и) ( & )
    // OR(или) ( | )
    // XOR(побитовое исключающее или) ( ^ )
    // NOT(не) ( ~ )
    // LEFT SHIFT(левый сдвиг) ( << )
    // RIGHT SHIFT(правый сдвиг) ( >> )
    // ZERO-FILL RIGHT SHIFT(правый сдвиг с заполнением нулями) ( >>> )


// Оператор запятая
    let comma =(1+2,3+4);
    console.log(comma);//7(результат вычесления 3+4)
    