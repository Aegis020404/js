// Сравнение по ссылке
// Операторы равенства == и строгого равенства === для объектов работают одинаково.
let a = {};
let b = {}; // два независимых объекта

console.log( a == b ); // false


// Object.assign(dest, [src1, src2, src3...])
    // Первый аргумент dest — целевой объект.
    // Остальные аргументы src1, ..., srcN (может быть столько, сколько нужно)) являются исходными объектами
    // Метод копирует свойства всех исходных объектов src1, ..., srcN в целевой объект dest. То есть, свойства всех перечисленных объектов, начиная со второго, копируются в первый объект.
    // Возвращает объект dest.

    let user = { name: 'Ivan'};
    let permissions1 = { canView: true};
    let permissions2 = { canEdit: true};

    // копируем все свойства из permissions1 и permissions2 в user
    Object.assign(user,permissions1,permissions2);
    console.log(user);// теперь user = { name: "Иван", canView: true, canEdit: true }

    // Для «простого клонирования» объекта можно использовать Object.assign. Необходимо помнить, что Object.assign не делает глубокое клонирование объекта. Если внутри копируемого объекта есть свойство, значение которого не является примитивом, оно будет передано по ссылке. Для создания «настоящей копии» (полного клона объекта) можно воспользоваться методом из сторонней JavaScript-библиотеки _.cloneDeep(obj).