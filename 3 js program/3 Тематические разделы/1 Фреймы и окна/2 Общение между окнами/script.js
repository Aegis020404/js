// Политика "Одинакового источника"
    // Два URL имеют «одинаковый источник» в том случае, если они имеют совпадающие протокол, домен и порт.

    // Эти URL имеют одинаковый источник:

        // http://site.com
        // http://site.com/
        // http://site.com/my/page.html

    // А эти – разные источники:

        // http://www.site.com (другой домен: www. важен)
        // http://site.org (другой домен: .org важен)
        // https://site.com (другой протокол: https)
        // http://site.com:8080 (другой порт: 8080)

    iframe.onload = function() {
        // можно получить ссылку на внутрениий window
        let iframeWindow = iframe.contentWindow; // OK
        try {
            console.log(iframeWindow);
            // но не на документ внутри него
            let doc = iframe.contentDocument;
        } catch(e) {
            console.log(e.name)
        }

        // так же мы не можем прочитать URL страницы в ифрейме
        try {
            //  нельзя читать из объекта Location
            let href = iframe.contentWindow.location.href; // ошибка
        } catch(e) {
            console.log(e.name)
        }

        // ...но можно писать в него (и загрузить что-то другое в ифрейм)!
        iframe.contentWindow.location = '/'; // OK

        iframe.onload = null;
    }


// Окна на поддоменах: document.domain
    // По определению, если у двух URL разный домен, то у них разный источник.

    // Но если в окнах открыты страницы с поддоменов одного домена 2-го уровня, например john.site.com, peter.site.com и site.com (так что их общий домен site.com), то можно заставить браузер игнорировать это отличие. Так что браузер сможет считать их пришедшими с одного источника при проверке возможности доступа друг к другу.

    // Для этого в каждом таком окне нужно запустить:

        // document.domain = 'site.com';

    // После этого они смогут взаимодействовать без ограничений. Ещё раз заметим, что это доступно только для страниц с одинаковым доменом второго уровня.


// Коллекция window.frames
    console.log(window.frames[0]);
    console.log(window.frames.frst);


// Атрибут ифрейма sandbox
    // Атрибут sandbox позволяет наложить ограничения на действия внутри <iframe>, чтобы предотвратить выполнение ненадёжного кода. Атрибут помещает ифрейм в «песочницу», отмечая его как имеющий другой источник и/или накладывая на него дополнительные ограничения.

    // Существует список «по умолчанию» ограничений, которые накладываются на <iframe sandbox src="...">. Их можно уменьшить, если указать в атрибуте список исключений (специальными ключевыми словами), которые не нужно применять, например: <iframe sandbox="allow-forms allow-popups">.

    // Другими словами, если у атрибута "sandbox" нет значения, то браузер применяет максимум ограничений, но через пробел можно указать те из них, которые мы не хотим применять.

    // Вот список ограничений:

    // allow-same-origin
    // "sandbox" принудительно устанавливает «другой источник» для ифрейма. Другими словами, он заставляет браузер воспринимать iframe, как пришедший из другого источника, даже если src содержит тот же сайт. Со всеми сопутствующими ограничениями для скриптов. Эта опция отключает это ограничение.
    // allow-top-navigation
    // Позволяет ифрейму менять parent.location.
    // allow-forms
    // Позволяет отправлять формы из ифрейма.
    // allow-scripts
    // Позволяет запускать скрипты из ифрейма.
    // allow-popups
    // Позволяет открывать всплывающие окна из ифрейма с помощью window.open.
    // Больше опций можно найти в справочнике.


// Обмен сообщениями между окнами
    