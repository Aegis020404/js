// Примеры методов
    let user = {
        // ...
    };
    
    // сначала объявляем
    function sayHi() {
        console.log("Привет!");
    };
    
    // затем добавляем в качестве метода
    user.sayHi = sayHi;
    
    user.sayHi(); // Привет!


        // сокращённая запись выглядит лучше, не так ли?
    user1 = {
        name: 'Alex',
        sayHi() { // то же самое, что и "sayHi: function()"
            console.log("Привет "+this.name);
        }
    };
    user1.sayHi();



//     Для работы вызовов типа user.hi(), JavaScript использует трюк – точка '.' возвращает не саму функцию, а специальное значение «ссылочного типа», называемого Reference Type.

// Этот ссылочный тип (Reference Type) является внутренним типом. Мы не можем явно использовать его, но он используется внутри языка.

// Значение ссылочного типа – это «триплет»: комбинация из трёх значений (base, name, strict), где:

// base – это объект.
// name – это имя свойства объекта.
// strict – это режим исполнения. Является true, если действует строгий режим (use strict).
// Результатом доступа к свойству user.hi является не функция, а значение ссылочного типа. Для user.hi в строгом режиме оно будет таким:

// // значение ссылочного типа (Reference Type)
// (user, "hi", true)

